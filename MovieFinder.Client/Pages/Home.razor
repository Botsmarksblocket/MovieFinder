@using Services
@using Models
@inject ITMDBService TMDB
@inject ISnackbar Snackbar
@page "/"

<PageTitle>Home</PageTitle>

<MudPaper Class="d-flex justify-center" Style="min-height: 100vh; width: 100vw;" Elevation="0">
	<MudPaper Width="70%" Height="1000px" Square="true" Elevation="0" Style="height: 100%; overflow: scroll;">
		<MudGrid>
			@foreach (var movie in trendingMovies)
			{
				<MudItem xs="3">
					<img src="@GetImageUrl(movie.PosterPath)" />
					<p>@movie.Title</p>
				</MudItem>
			}
		</MudGrid>
	</MudPaper>
</MudPaper>

@code {
	private List<Movie> trendingMovies = new();

	protected override async Task OnInitializedAsync()
	{
		try
		{
			var reponse = await TMDB.GetTrendingMoviesAsync();
			trendingMovies = reponse ?? new List<Movie>();
			StateHasChanged();
		}

		catch
		{
			Snackbar.Add($"Something went wrong when trying to retrieve the movies.", Severity.Error);
		}
	}
	private string GetImageUrl(string posterPath)
	{
		return $"https://image.tmdb.org/t/p/w500{posterPath}";
	}
}