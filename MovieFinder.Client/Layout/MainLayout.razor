@inherits LayoutComponentBase
@using Models
@using Services
@using Slugify
@inject ITMDBService TMDB
<MudThemeProvider Theme="@MovieTheme" IsDarkMode="true" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
	<MudAppBar Fixed="true" Style="background-color: #2d4659;" Elevation="0">
		<div style="width: 76%; margin: 0 auto;">
			<MudGrid Justify="Justify.Center" Spacing="2">
				<MudItem xs="3" md="1" Class="mt-2">
					<MudImage Width="60"
							  Src="/Images/tmdb.svg"></MudImage>
				</MudItem>

				<MudItem xs="9" md="11" Class="mt-1">
					<MudAutocomplete T="Movie"
									 FullWidth="true"
									 Label="Search movie"
									 Value="_selectedMovie"
									 ValueChanged="OnMovieSelected"
									 SearchFunc="@SearchMovie"
									 Variant="Variant.Filled"
									 ShowProgressIndicator="true"
									 ToStringFunc="@(m => m?.Title)"
									 ResetValueOnEmptyText="true"
									 DebounceInterval="300"
									 Margin="Margin.Dense"
									 Clearable="true"
									 Dense="true"
									 MaxHeight="400"
									 CoerceText="false"
									 RelativeWidth="DropdownWidth.Relative"
									 PopoverClass="full-width-dropdown">
						<ItemTemplate>
							<NavLink href="@GenerateUrl(context.Id, context.Title)">
								<MudStack Row="true">
									<MudImage Style="width: 47px; height: 71px; margin-right: 10px;"
											  Src="@GetImageUrl(context.PosterPath)"
											  Alt="Movie Poster"
											  FallbackSrc="/Images/notfound.png" />

									<MudStack Justify="Justify.Center" Spacing="0">
										<h4>@context.Title</h4>
										<h5>@context.ReleaseDate</h5>
									</MudStack>
								</MudStack>
							</NavLink>
						</ItemTemplate>
					</MudAutocomplete>
				</MudItem>
			</MudGrid>
		</div>
	</MudAppBar>

	<MudMainContent>
		@Body
	</MudMainContent>
</MudLayout>

@code {
	private SlugHelper slugHelper = new();

	//Generates a valid url for a specific movie using the Slugify library
	private string GenerateUrl(int id, string movieTitle)
	{
		return $"/movie/{id}/{slugHelper.GenerateSlug(movieTitle)}";
	}

	private async Task OnMovieSelected(Movie selected)
	{
		_selectedMovie = null;
	}

	private Movie _selectedMovie;

	private async Task<IEnumerable<Movie>> SearchMovie(string movieName, CancellationToken token)
	{
		return await TMDB.GetMovieAsync(movieName);
	}

	private string GetImageUrl(string posterPath)
	{
		return string.IsNullOrWhiteSpace(posterPath)
		? ""
		: $"https://image.tmdb.org/t/p/w780{posterPath}";
	}
	public static MudTheme MovieTheme = new MudTheme()
		{
			PaletteDark = new PaletteDark()
			{
				Black = "#0b0d10",
				Background = "#10151c",
				BackgroundGray = "#182027",
				Surface = "#1e2a33",
				DrawerBackground = "#141b23",
				DrawerText = "rgba(255,255,255, 0.65)",
				DrawerIcon = "rgba(255,255,255, 0.65)",
				AppbarText = "rgba(255,255,255, 0.78)",
				TextPrimary = "rgba(255,255,255, 0.90)",
				TextSecondary = "rgba(255,255,255, 0.60)",
				ActionDefault = "#38bdf8",
				ActionDisabled = "rgba(255,255,255, 0.30)",
				ActionDisabledBackground = "rgba(255,255,255, 0.10)",
				Divider = "rgba(56, 189, 248, 1)",
				DividerLight = "rgba(255,255,255, 0.08)",
				TableLines = "rgba(255,255,255, 0.10)",
				LinesDefault = "rgba(255,255,255, 0.10)",
				LinesInputs = "rgba(255,255,255, 0.25)",
				TextDisabled = "rgba(255,255,255, 0.30)",
				Error = "#ef4444",
				Primary = "#3b82f6",
				PrimaryContrastText = "#ffffff",
				Secondary = "#14b8a6"
			}
		};
}